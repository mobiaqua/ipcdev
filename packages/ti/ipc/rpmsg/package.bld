/*
 * Copyright (c) 2011-2019 Texas Instruments Incorporated - http://www.ti.com
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * *  Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 * *  Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * *  Neither the name of Texas Instruments Incorporated nor the names of
 *    its contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
 * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/*
 *  ======== package.bld ========
 */
var Build = xdc.useModule('xdc.bld.BuildEnvironment');
var Pkg = xdc.useModule('xdc.bld.PackageContents');

var objList = [ "RPMessage.c", "NameMap.c" ];

var myCopts = "";

/*  Always build package libraries during the product build. This is
 *  needed because there is a compile time binding to VirtQueue, which
 *  has different implementations depending on the device. If this
 *  package were to be included in the IPC product library, it would
 *  require multiple product libraries (e.g. with a different VirtQueue
 *  implementation for each device).
 *
 *  However, this package does participate in the custom build flow.
 */
for (var i = 0; i < Build.targets.length; i++) {
    var targ = Build.targets[i];
    var name = Pkg.name;

    myCopts = "";

    for (var profile in targ.profiles) {

        /* build a platform-specific library */
        if (targ.isa == "674") {
            Pkg.addLibrary("lib/" + profile + "/" + name + "_omapl138", targ, {
                profile: profile,
                copts: myCopts,
                defs: "-DOMAPL138 -DRPMSG_NS_2_0"
            }).addObjects(objList);
        }
        else if (targ.isa == "66") {
            Pkg.addLibrary("lib/" + profile + "/" + name + "_tci6638", targ, {
                profile: profile,
                copts: myCopts,
                defs: "-DTCI6638 -DRPMSG_NS_2_0"
            }).addObjects(objList);

            Pkg.addLibrary("lib/" + profile + "/" + name + "_vayu", targ, {
                profile: profile,
                copts: myCopts,
                defs: "-DVAYU -DDSP -DRPMSG_NS_2_0"
            }).addObjects(objList);
        }
        else if (targ.isa.match(/^v7M3?$/)) {
            Pkg.addLibrary("lib/" + profile + "/" + name + "_omap4_smp", targ, {
                profile: profile,
                copts: myCopts,
                defs: "-DOMAP4 -DSMP -DRPMSG_NS_2_0"
            }).addObjects(objList);
        }
        else if (targ.isa.match(/^v7M4?$/)) {
            Pkg.addLibrary("lib/" + profile + "/" + name + "_omap5_smp", targ, {
                profile: profile,
                copts: myCopts,
                defs: "-DOMAP5 -DSMP -DRPMSG_NS_2_0"
            }).addObjects(objList);

            Pkg.addLibrary("lib/" + profile + "/" + name + "_vayu_smp", targ, {
                profile: profile,
                copts: myCopts,
                defs: "-DVAYU -DSMP -DRPMSG_NS_2_0"
            }).addObjects(objList);
        }
        else if (targ.isa == "64T") {
            Pkg.addLibrary("lib/" + profile + "/" + name + "_omap5", targ, {
                profile: profile,
                copts: myCopts,
                defs: "-DOMAP5 -DDSP -DRPMSG_NS_2_0"
            }).addObjects(objList);
        }
        else if (targ.isa == "v7R") {
            Pkg.addLibrary("lib/" + profile + "/" + name + "_am65xx", targ, {
                profile: profile,
                copts: myCopts,
                defs: "-DAM65XX -DRPMSG_NS_2_0",
            }).addObjects(objList);
        }
        else {
            /* target not suppoted */
            continue;
        }
    }
}

Pkg.otherFiles = [
    "package.bld",
    "Rpmsg.h",
    "virtio_ring.h",
    "_RPMessage.h",
    "_VirtQueue.h",
    "RPMessage.h",
    "NameMap.h"
];

/* include source files in the release package */
Pkg.attrs.exportSrc = true;

Pkg.generatedFiles.$add("lib/");
