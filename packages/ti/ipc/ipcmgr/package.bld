/*
 * Copyright (c) 2012-2015 Texas Instruments Incorporated - http://www.ti.com
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * *  Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 * *  Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * *  Neither the name of Texas Instruments Incorporated nor the names of
 *    its contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
 * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/*
 *  ======== package.bld ========
 */
var Build = xdc.useModule('xdc.bld.BuildEnvironment');
var Pkg = xdc.useModule('xdc.bld.PackageContents');

var objList = [ "IpcMgr.c" ];

/*  Always build package libraries during the product build. This is
 *  needed because there is a compile time binding to Device Exception
 *  Handling (deh) support. If this package were to be included in the
 *  IPC product library, it would require multiple product libraries
 *  (e.g. with and without deh support).
 *
 *  However, this package does participate in the custom build flow.
 */
for (var i = 0; i < Build.targets.length; i++) {
    var targ = Build.targets[i];

    for (var profile in targ.profiles) {
        Pkg.addLibrary("lib/" + profile + "/" + Pkg.name, targ, {
            profile: profile
        }).addObjects(objList);

        /* build deh enabled libraries for supported targets */
        if (targ.isa.match(/^(64T|66)$/)) {
            Pkg.addLibrary("lib/" + profile + "/" + Pkg.name + "_deh", targ, {
                profile: profile,
                defs: "-DIpcMgr_USEDEH -DIpcMgr_DSP"
            }).addObjects(objList);
        }
        else if (targ.isa.match(/^v7M3?$/)) {
            Pkg.addLibrary("lib/" + profile + "/" + Pkg.name + "_deh", targ, {
                profile: profile,
                defs: "-DIpcMgr_USEDEH -DIpcMgr_IPU"
            }).addObjects(objList);
        }
        else if (targ.isa.match(/^v7M4?$/)) {
            Pkg.addLibrary("lib/" + profile + "/" + Pkg.name + "_deh", targ, {
                profile: profile,
                defs: "-DIpcMgr_USEDEH -DIpcMgr_IPU"
            }).addObjects(objList);
        }
    }
}

Pkg.otherFiles = [
    "package.bld",
    "IpcMgr.h"
];

/* include source files in the release package */
Pkg.attrs.exportSrc = true;

Pkg.generatedFiles.$add("lib/");
